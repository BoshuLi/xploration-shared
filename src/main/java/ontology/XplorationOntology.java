// file: XplorationOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ontology;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: XplorationOntology.java
 * @author OntologyBeanGenerator v4.1
 * @version 2016/04/25, 12:47:48
 */
public class XplorationOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = -2471660582568548082L;

  //NAME
  public static final String ONTOLOGY_NAME = "xploration";
  // The singleton instance of this ontology
  private static Ontology theInstance = new XplorationOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String REGISTRATIONREQUEST_COMPANY="company";
    public static final String REGISTRATIONREQUEST="RegistrationRequest";
    public static final String COMPANY_NAME="name";
    public static final String COMPANY_COMPANY_AGENT="company_agent";
    public static final String COMPANY="Company";
    public static final String ROVER_ROVER_AGENT="rover_agent";
    public static final String ROVER_NAME="name";
    public static final String ROVER="Rover";
    public static final String CAPSULE_CAPSULE_AGENT="capsule_agent";
    public static final String CAPSULE_NAME="name";
    public static final String CAPSULE="Capsule";

  /**
   * Constructor
  */
  private XplorationOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema capsuleSchema = new ConceptSchema(CAPSULE);
    add(capsuleSchema, ontology.Capsule.class);
    ConceptSchema roverSchema = new ConceptSchema(ROVER);
    add(roverSchema, ontology.Rover.class);
    ConceptSchema companySchema = new ConceptSchema(COMPANY);
    add(companySchema, ontology.Company.class);

    // adding AgentAction(s)
    AgentActionSchema registrationRequestSchema = new AgentActionSchema(REGISTRATIONREQUEST);
    add(registrationRequestSchema, ontology.RegistrationRequest.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    capsuleSchema.add(CAPSULE_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    capsuleSchema.add(CAPSULE_CAPSULE_AGENT, (ConceptSchema)getSchema(BasicOntology.AID), ObjectSchema.OPTIONAL);
    roverSchema.add(ROVER_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    roverSchema.add(ROVER_ROVER_AGENT, (ConceptSchema)getSchema(BasicOntology.AID), ObjectSchema.OPTIONAL);
    companySchema.add(COMPANY_COMPANY_AGENT, (ConceptSchema)getSchema(BasicOntology.AID), ObjectSchema.OPTIONAL);
    companySchema.add(COMPANY_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    registrationRequestSchema.add(REGISTRATIONREQUEST_COMPANY, companySchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
